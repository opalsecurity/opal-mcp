/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { groupBindingsCreateGroupBinding } from "../funcs/groupBindingsCreateGroupBinding.js";
import { groupBindingsDeleteGroupBinding } from "../funcs/groupBindingsDeleteGroupBinding.js";
import { groupBindingsGetGroupBinding } from "../funcs/groupBindingsGetGroupBinding.js";
import { groupBindingsGetGroupBindings } from "../funcs/groupBindingsGetGroupBindings.js";
import { groupBindingsUpdateGroupBindings } from "../funcs/groupBindingsUpdateGroupBindings.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class GroupBindings extends ClientSDK {
  /**
   * Returns a list of `GroupBinding` objects.
   */
  async getGroupBindings(
    request: operations.GetGroupBindingsRequest,
    options?: RequestOptions,
  ): Promise<components.PaginatedGroupBindingsList> {
    return unwrapAsync(groupBindingsGetGroupBindings(
      this,
      request,
      options,
    ));
  }

  /**
   * Creates a group binding.
   */
  async createGroupBinding(
    request: components.CreateGroupBindingInfo,
    options?: RequestOptions,
  ): Promise<components.GroupBinding> {
    return unwrapAsync(groupBindingsCreateGroupBinding(
      this,
      request,
      options,
    ));
  }

  /**
   * Bulk updates a list of group bindings.
   */
  async updateGroupBindings(
    request: components.UpdateGroupBindingInfoList,
    options?: RequestOptions,
  ): Promise<void> {
    return unwrapAsync(groupBindingsUpdateGroupBindings(
      this,
      request,
      options,
    ));
  }

  /**
   * Returns a `GroupBinding` object.
   */
  async getGroupBinding(
    request: operations.GetGroupBindingRequest,
    options?: RequestOptions,
  ): Promise<components.GroupBinding> {
    return unwrapAsync(groupBindingsGetGroupBinding(
      this,
      request,
      options,
    ));
  }

  /**
   * Deletes a group binding.
   */
  async deleteGroupBinding(
    request: operations.DeleteGroupBindingRequest,
    options?: RequestOptions,
  ): Promise<void> {
    return unwrapAsync(groupBindingsDeleteGroupBinding(
      this,
      request,
      options,
    ));
  }
}
