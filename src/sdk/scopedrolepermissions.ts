/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { resourcesGetResourceScopedRolePermissions } from "../funcs/resourcesGetResourceScopedRolePermissions.js";
import { resourcesSetResourceScopedRolePermissions } from "../funcs/resourcesSetResourceScopedRolePermissions.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class ScopedRolePermissions extends ClientSDK {
  /**
   * Returns all the scoped role permissions that apply to the given resource. Only OPAL_SCOPED_ROLE resource type supports this field.
   */
  async getResourceScopedRolePermissions(
    request: operations.GetResourceScopedRolePermissionsRequest,
    options?: RequestOptions,
  ): Promise<components.ScopedRolePermissionList> {
    return unwrapAsync(resourcesGetResourceScopedRolePermissions(
      this,
      request,
      options,
    ));
  }

  /**
   * Sets all the scoped role permissions on an OPAL_SCOPED_ROLE resource.
   */
  async setResourceScopedRolePermissions(
    request: operations.SetResourceScopedRolePermissionsRequest,
    options?: RequestOptions,
  ): Promise<components.ScopedRolePermissionList> {
    return unwrapAsync(resourcesSetResourceScopedRolePermissions(
      this,
      request,
      options,
    ));
  }
}
