/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { accessRulesCreateAccessRule } from "../funcs/accessRulesCreateAccessRule.js";
import { accessRulesGetAccessRule } from "../funcs/accessRulesGetAccessRule.js";
import { accessRulesUpdateAccessRule } from "../funcs/accessRulesUpdateAccessRule.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class AccessRules extends ClientSDK {
  /**
   * Creates a new access rule config for the given group_id.
   */
  async createAccessRule(
    request: components.UpdateAccessRuleInfo,
    options?: RequestOptions,
  ): Promise<components.AccessRule> {
    return unwrapAsync(accessRulesCreateAccessRule(
      this,
      request,
      options,
    ));
  }

  /**
   * Returns a list of access rule config given the group_id of the access rule.
   */
  async getAccessRule(
    request: operations.GetAccessRuleRequest,
    options?: RequestOptions,
  ): Promise<components.AccessRule> {
    return unwrapAsync(accessRulesGetAccessRule(
      this,
      request,
      options,
    ));
  }

  /**
   * Updates the access rule config for the given group_id.
   */
  async updateAccessRule(
    request: operations.UpdateAccessRuleRequest,
    options?: RequestOptions,
  ): Promise<components.AccessRule> {
    return unwrapAsync(accessRulesUpdateAccessRule(
      this,
      request,
      options,
    ));
  }
}
