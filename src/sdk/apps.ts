/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { appsGetApp } from "../funcs/appsGetApp.js";
import { appsGetApps } from "../funcs/appsGetApps.js";
import { appsGetSyncErrors } from "../funcs/appsGetSyncErrors.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Apps extends ClientSDK {
  /**
   * Returns a list of `App` objects.
   */
  async getApps(
    request: operations.GetAppsRequest,
    options?: RequestOptions,
  ): Promise<components.AppsList> {
    return unwrapAsync(appsGetApps(
      this,
      request,
      options,
    ));
  }

  /**
   * Returns an `App` object.
   */
  async getApp(
    request: operations.GetAppRequest,
    options?: RequestOptions,
  ): Promise<components.App> {
    return unwrapAsync(appsGetApp(
      this,
      request,
      options,
    ));
  }

  /**
   * Returns a list of recent sync errors that have occurred since the last successful sync.
   */
  async getSyncErrors(
    request: operations.GetSyncErrorsRequest,
    options?: RequestOptions,
  ): Promise<Array<components.SyncErrorList>> {
    return unwrapAsync(appsGetSyncErrors(
      this,
      request,
      options,
    ));
  }
}
