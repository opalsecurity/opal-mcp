/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { usersGetUsers } from "../funcs/usersGetUsers.js";
import { usersGetUserTags } from "../funcs/usersGetUserTags.js";
import { usersUser } from "../funcs/usersUser.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Users extends ClientSDK {
  /**
   * Returns a `User` object.
   */
  async user(
    request: operations.UserRequest,
    options?: RequestOptions,
  ): Promise<components.User> {
    return unwrapAsync(usersUser(
      this,
      request,
      options,
    ));
  }

  /**
   * Returns a list of users for your organization.
   */
  async getUsers(
    request: operations.GetUsersRequest,
    options?: RequestOptions,
  ): Promise<components.PaginatedUsersList> {
    return unwrapAsync(usersGetUsers(
      this,
      request,
      options,
    ));
  }

  /**
   * Returns all tags applied to the user.
   */
  async getUserTags(
    request: operations.GetUserTagsRequest,
    options?: RequestOptions,
  ): Promise<components.TagsList> {
    return unwrapAsync(usersGetUserTags(
      this,
      request,
      options,
    ));
  }
}
