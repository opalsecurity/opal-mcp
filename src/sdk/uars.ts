/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { uarsCreateUar } from "../funcs/uarsCreateUar.js";
import { uarsGetUar } from "../funcs/uarsGetUar.js";
import { uarsGetUARs } from "../funcs/uarsGetUARs.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";
import { PageIterator, unwrapResultIterator } from "../types/operations.js";

export class Uars extends ClientSDK {
  /**
   * Returns a list of `UAR` objects.
   */
  async getUARs(
    request: operations.GetUARsRequest,
    options?: RequestOptions,
  ): Promise<PageIterator<operations.GetUARsResponse, { cursor: string }>> {
    return unwrapResultIterator(uarsGetUARs(
      this,
      request,
      options,
    ));
  }

  /**
   * Starts a User Access Review.
   */
  async createUar(
    request: components.CreateUARInfo,
    options?: RequestOptions,
  ): Promise<components.Uar> {
    return unwrapAsync(uarsCreateUar(
      this,
      request,
      options,
    ));
  }

  /**
   * Retrieves a specific UAR.
   */
  async getUar(
    request: operations.GetUarRequest,
    options?: RequestOptions,
  ): Promise<components.Uar> {
    return unwrapAsync(uarsGetUar(
      this,
      request,
      options,
    ));
  }
}
