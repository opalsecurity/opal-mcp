/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type SetResourceReviewersRequest = {
  /**
   * The ID of the resource.
   */
  resourceId: string;
  reviewerIDList: components.ReviewerIDList;
};

/** @internal */
export const SetResourceReviewersRequest$inboundSchema: z.ZodType<
  SetResourceReviewersRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  resource_id: z.string(),
  ReviewerIDList: components.ReviewerIDList$inboundSchema,
}).transform((v) => {
  return remap$(v, {
    "resource_id": "resourceId",
    "ReviewerIDList": "reviewerIDList",
  });
});

/** @internal */
export type SetResourceReviewersRequest$Outbound = {
  resource_id: string;
  ReviewerIDList: components.ReviewerIDList$Outbound;
};

/** @internal */
export const SetResourceReviewersRequest$outboundSchema: z.ZodType<
  SetResourceReviewersRequest$Outbound,
  z.ZodTypeDef,
  SetResourceReviewersRequest
> = z.object({
  resourceId: z.string(),
  reviewerIDList: components.ReviewerIDList$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    resourceId: "resource_id",
    reviewerIDList: "ReviewerIDList",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SetResourceReviewersRequest$ {
  /** @deprecated use `SetResourceReviewersRequest$inboundSchema` instead. */
  export const inboundSchema = SetResourceReviewersRequest$inboundSchema;
  /** @deprecated use `SetResourceReviewersRequest$outboundSchema` instead. */
  export const outboundSchema = SetResourceReviewersRequest$outboundSchema;
  /** @deprecated use `SetResourceReviewersRequest$Outbound` instead. */
  export type Outbound = SetResourceReviewersRequest$Outbound;
}

export function setResourceReviewersRequestToJSON(
  setResourceReviewersRequest: SetResourceReviewersRequest,
): string {
  return JSON.stringify(
    SetResourceReviewersRequest$outboundSchema.parse(
      setResourceReviewersRequest,
    ),
  );
}

export function setResourceReviewersRequestFromJSON(
  jsonString: string,
): SafeParseResult<SetResourceReviewersRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => SetResourceReviewersRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'SetResourceReviewersRequest' from JSON`,
  );
}
