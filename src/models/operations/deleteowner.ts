/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type DeleteOwnerRequest = {
  /**
   * The ID of the owner.
   */
  ownerId: string;
};

/** @internal */
export const DeleteOwnerRequest$inboundSchema: z.ZodType<
  DeleteOwnerRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  owner_id: z.string(),
}).transform((v) => {
  return remap$(v, {
    "owner_id": "ownerId",
  });
});

/** @internal */
export type DeleteOwnerRequest$Outbound = {
  owner_id: string;
};

/** @internal */
export const DeleteOwnerRequest$outboundSchema: z.ZodType<
  DeleteOwnerRequest$Outbound,
  z.ZodTypeDef,
  DeleteOwnerRequest
> = z.object({
  ownerId: z.string(),
}).transform((v) => {
  return remap$(v, {
    ownerId: "owner_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteOwnerRequest$ {
  /** @deprecated use `DeleteOwnerRequest$inboundSchema` instead. */
  export const inboundSchema = DeleteOwnerRequest$inboundSchema;
  /** @deprecated use `DeleteOwnerRequest$outboundSchema` instead. */
  export const outboundSchema = DeleteOwnerRequest$outboundSchema;
  /** @deprecated use `DeleteOwnerRequest$Outbound` instead. */
  export type Outbound = DeleteOwnerRequest$Outbound;
}

export function deleteOwnerRequestToJSON(
  deleteOwnerRequest: DeleteOwnerRequest,
): string {
  return JSON.stringify(
    DeleteOwnerRequest$outboundSchema.parse(deleteOwnerRequest),
  );
}

export function deleteOwnerRequestFromJSON(
  jsonString: string,
): SafeParseResult<DeleteOwnerRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DeleteOwnerRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DeleteOwnerRequest' from JSON`,
  );
}
