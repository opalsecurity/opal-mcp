/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type UpdateAccessRuleRequest = {
  /**
   * The access rule ID (group ID) of the access rule.
   */
  accessRuleId: string;
  updateAccessRuleInfo: components.UpdateAccessRuleInfo;
};

/** @internal */
export const UpdateAccessRuleRequest$inboundSchema: z.ZodType<
  UpdateAccessRuleRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  access_rule_id: z.string(),
  UpdateAccessRuleInfo: components.UpdateAccessRuleInfo$inboundSchema,
}).transform((v) => {
  return remap$(v, {
    "access_rule_id": "accessRuleId",
    "UpdateAccessRuleInfo": "updateAccessRuleInfo",
  });
});

/** @internal */
export type UpdateAccessRuleRequest$Outbound = {
  access_rule_id: string;
  UpdateAccessRuleInfo: components.UpdateAccessRuleInfo$Outbound;
};

/** @internal */
export const UpdateAccessRuleRequest$outboundSchema: z.ZodType<
  UpdateAccessRuleRequest$Outbound,
  z.ZodTypeDef,
  UpdateAccessRuleRequest
> = z.object({
  accessRuleId: z.string(),
  updateAccessRuleInfo: components.UpdateAccessRuleInfo$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    accessRuleId: "access_rule_id",
    updateAccessRuleInfo: "UpdateAccessRuleInfo",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateAccessRuleRequest$ {
  /** @deprecated use `UpdateAccessRuleRequest$inboundSchema` instead. */
  export const inboundSchema = UpdateAccessRuleRequest$inboundSchema;
  /** @deprecated use `UpdateAccessRuleRequest$outboundSchema` instead. */
  export const outboundSchema = UpdateAccessRuleRequest$outboundSchema;
  /** @deprecated use `UpdateAccessRuleRequest$Outbound` instead. */
  export type Outbound = UpdateAccessRuleRequest$Outbound;
}

export function updateAccessRuleRequestToJSON(
  updateAccessRuleRequest: UpdateAccessRuleRequest,
): string {
  return JSON.stringify(
    UpdateAccessRuleRequest$outboundSchema.parse(updateAccessRuleRequest),
  );
}

export function updateAccessRuleRequestFromJSON(
  jsonString: string,
): SafeParseResult<UpdateAccessRuleRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UpdateAccessRuleRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdateAccessRuleRequest' from JSON`,
  );
}
