/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetIdpGroupMappingsRequest = {
  /**
   * The ID of the Okta app.
   */
  appResourceId: string;
};

/** @internal */
export const GetIdpGroupMappingsRequest$inboundSchema: z.ZodType<
  GetIdpGroupMappingsRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  app_resource_id: z.string(),
}).transform((v) => {
  return remap$(v, {
    "app_resource_id": "appResourceId",
  });
});

/** @internal */
export type GetIdpGroupMappingsRequest$Outbound = {
  app_resource_id: string;
};

/** @internal */
export const GetIdpGroupMappingsRequest$outboundSchema: z.ZodType<
  GetIdpGroupMappingsRequest$Outbound,
  z.ZodTypeDef,
  GetIdpGroupMappingsRequest
> = z.object({
  appResourceId: z.string(),
}).transform((v) => {
  return remap$(v, {
    appResourceId: "app_resource_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetIdpGroupMappingsRequest$ {
  /** @deprecated use `GetIdpGroupMappingsRequest$inboundSchema` instead. */
  export const inboundSchema = GetIdpGroupMappingsRequest$inboundSchema;
  /** @deprecated use `GetIdpGroupMappingsRequest$outboundSchema` instead. */
  export const outboundSchema = GetIdpGroupMappingsRequest$outboundSchema;
  /** @deprecated use `GetIdpGroupMappingsRequest$Outbound` instead. */
  export type Outbound = GetIdpGroupMappingsRequest$Outbound;
}

export function getIdpGroupMappingsRequestToJSON(
  getIdpGroupMappingsRequest: GetIdpGroupMappingsRequest,
): string {
  return JSON.stringify(
    GetIdpGroupMappingsRequest$outboundSchema.parse(getIdpGroupMappingsRequest),
  );
}

export function getIdpGroupMappingsRequestFromJSON(
  jsonString: string,
): SafeParseResult<GetIdpGroupMappingsRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetIdpGroupMappingsRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetIdpGroupMappingsRequest' from JSON`,
  );
}
