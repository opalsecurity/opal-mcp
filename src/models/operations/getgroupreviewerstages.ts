/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetGroupReviewerStagesRequest = {
  /**
   * The ID of the group.
   */
  groupId: string;
};

/** @internal */
export const GetGroupReviewerStagesRequest$inboundSchema: z.ZodType<
  GetGroupReviewerStagesRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  group_id: z.string(),
}).transform((v) => {
  return remap$(v, {
    "group_id": "groupId",
  });
});

/** @internal */
export type GetGroupReviewerStagesRequest$Outbound = {
  group_id: string;
};

/** @internal */
export const GetGroupReviewerStagesRequest$outboundSchema: z.ZodType<
  GetGroupReviewerStagesRequest$Outbound,
  z.ZodTypeDef,
  GetGroupReviewerStagesRequest
> = z.object({
  groupId: z.string(),
}).transform((v) => {
  return remap$(v, {
    groupId: "group_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetGroupReviewerStagesRequest$ {
  /** @deprecated use `GetGroupReviewerStagesRequest$inboundSchema` instead. */
  export const inboundSchema = GetGroupReviewerStagesRequest$inboundSchema;
  /** @deprecated use `GetGroupReviewerStagesRequest$outboundSchema` instead. */
  export const outboundSchema = GetGroupReviewerStagesRequest$outboundSchema;
  /** @deprecated use `GetGroupReviewerStagesRequest$Outbound` instead. */
  export type Outbound = GetGroupReviewerStagesRequest$Outbound;
}

export function getGroupReviewerStagesRequestToJSON(
  getGroupReviewerStagesRequest: GetGroupReviewerStagesRequest,
): string {
  return JSON.stringify(
    GetGroupReviewerStagesRequest$outboundSchema.parse(
      getGroupReviewerStagesRequest,
    ),
  );
}

export function getGroupReviewerStagesRequestFromJSON(
  jsonString: string,
): SafeParseResult<GetGroupReviewerStagesRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetGroupReviewerStagesRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetGroupReviewerStagesRequest' from JSON`,
  );
}
