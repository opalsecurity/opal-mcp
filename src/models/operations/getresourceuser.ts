/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetResourceUserRequest = {
  /**
   * The ID of the resource.
   */
  resourceId: string;
  /**
   * The ID of the user.
   */
  userId: string;
  /**
   * The pagination cursor value.
   */
  cursor?: string | undefined;
};

/**
 * List of ResourceUser records for the user's access to the resource.
 */
export type GetResourceUserResponse = {
  data: Array<components.ResourceUser>;
  /**
   * Pagination cursor for the next page of results
   */
  cursor?: string | undefined;
  /**
   * Total number of results
   */
  totalCount?: number | undefined;
};

/** @internal */
export const GetResourceUserRequest$inboundSchema: z.ZodType<
  GetResourceUserRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  resource_id: z.string(),
  user_id: z.string(),
  cursor: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    "resource_id": "resourceId",
    "user_id": "userId",
  });
});

/** @internal */
export type GetResourceUserRequest$Outbound = {
  resource_id: string;
  user_id: string;
  cursor?: string | undefined;
};

/** @internal */
export const GetResourceUserRequest$outboundSchema: z.ZodType<
  GetResourceUserRequest$Outbound,
  z.ZodTypeDef,
  GetResourceUserRequest
> = z.object({
  resourceId: z.string(),
  userId: z.string(),
  cursor: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    resourceId: "resource_id",
    userId: "user_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetResourceUserRequest$ {
  /** @deprecated use `GetResourceUserRequest$inboundSchema` instead. */
  export const inboundSchema = GetResourceUserRequest$inboundSchema;
  /** @deprecated use `GetResourceUserRequest$outboundSchema` instead. */
  export const outboundSchema = GetResourceUserRequest$outboundSchema;
  /** @deprecated use `GetResourceUserRequest$Outbound` instead. */
  export type Outbound = GetResourceUserRequest$Outbound;
}

export function getResourceUserRequestToJSON(
  getResourceUserRequest: GetResourceUserRequest,
): string {
  return JSON.stringify(
    GetResourceUserRequest$outboundSchema.parse(getResourceUserRequest),
  );
}

export function getResourceUserRequestFromJSON(
  jsonString: string,
): SafeParseResult<GetResourceUserRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetResourceUserRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetResourceUserRequest' from JSON`,
  );
}

/** @internal */
export const GetResourceUserResponse$inboundSchema: z.ZodType<
  GetResourceUserResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  data: z.array(components.ResourceUser$inboundSchema),
  cursor: z.string().optional(),
  total_count: z.number().int().optional(),
}).transform((v) => {
  return remap$(v, {
    "total_count": "totalCount",
  });
});

/** @internal */
export type GetResourceUserResponse$Outbound = {
  data: Array<components.ResourceUser$Outbound>;
  cursor?: string | undefined;
  total_count?: number | undefined;
};

/** @internal */
export const GetResourceUserResponse$outboundSchema: z.ZodType<
  GetResourceUserResponse$Outbound,
  z.ZodTypeDef,
  GetResourceUserResponse
> = z.object({
  data: z.array(components.ResourceUser$outboundSchema),
  cursor: z.string().optional(),
  totalCount: z.number().int().optional(),
}).transform((v) => {
  return remap$(v, {
    totalCount: "total_count",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetResourceUserResponse$ {
  /** @deprecated use `GetResourceUserResponse$inboundSchema` instead. */
  export const inboundSchema = GetResourceUserResponse$inboundSchema;
  /** @deprecated use `GetResourceUserResponse$outboundSchema` instead. */
  export const outboundSchema = GetResourceUserResponse$outboundSchema;
  /** @deprecated use `GetResourceUserResponse$Outbound` instead. */
  export type Outbound = GetResourceUserResponse$Outbound;
}

export function getResourceUserResponseToJSON(
  getResourceUserResponse: GetResourceUserResponse,
): string {
  return JSON.stringify(
    GetResourceUserResponse$outboundSchema.parse(getResourceUserResponse),
  );
}

export function getResourceUserResponseFromJSON(
  jsonString: string,
): SafeParseResult<GetResourceUserResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetResourceUserResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetResourceUserResponse' from JSON`,
  );
}
