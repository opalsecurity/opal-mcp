/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type DeleteGroupBindingRequest = {
  /**
   * The ID of the group binding.
   */
  groupBindingId: string;
};

/** @internal */
export const DeleteGroupBindingRequest$inboundSchema: z.ZodType<
  DeleteGroupBindingRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  group_binding_id: z.string(),
}).transform((v) => {
  return remap$(v, {
    "group_binding_id": "groupBindingId",
  });
});

/** @internal */
export type DeleteGroupBindingRequest$Outbound = {
  group_binding_id: string;
};

/** @internal */
export const DeleteGroupBindingRequest$outboundSchema: z.ZodType<
  DeleteGroupBindingRequest$Outbound,
  z.ZodTypeDef,
  DeleteGroupBindingRequest
> = z.object({
  groupBindingId: z.string(),
}).transform((v) => {
  return remap$(v, {
    groupBindingId: "group_binding_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteGroupBindingRequest$ {
  /** @deprecated use `DeleteGroupBindingRequest$inboundSchema` instead. */
  export const inboundSchema = DeleteGroupBindingRequest$inboundSchema;
  /** @deprecated use `DeleteGroupBindingRequest$outboundSchema` instead. */
  export const outboundSchema = DeleteGroupBindingRequest$outboundSchema;
  /** @deprecated use `DeleteGroupBindingRequest$Outbound` instead. */
  export type Outbound = DeleteGroupBindingRequest$Outbound;
}

export function deleteGroupBindingRequestToJSON(
  deleteGroupBindingRequest: DeleteGroupBindingRequest,
): string {
  return JSON.stringify(
    DeleteGroupBindingRequest$outboundSchema.parse(deleteGroupBindingRequest),
  );
}

export function deleteGroupBindingRequestFromJSON(
  jsonString: string,
): SafeParseResult<DeleteGroupBindingRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DeleteGroupBindingRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DeleteGroupBindingRequest' from JSON`,
  );
}
