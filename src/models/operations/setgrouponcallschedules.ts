/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type SetGroupOnCallSchedulesRequest = {
  /**
   * The ID of the group.
   */
  groupId: string;
  onCallScheduleIDList: components.OnCallScheduleIDList;
};

/** @internal */
export const SetGroupOnCallSchedulesRequest$inboundSchema: z.ZodType<
  SetGroupOnCallSchedulesRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  group_id: z.string(),
  OnCallScheduleIDList: components.OnCallScheduleIDList$inboundSchema,
}).transform((v) => {
  return remap$(v, {
    "group_id": "groupId",
    "OnCallScheduleIDList": "onCallScheduleIDList",
  });
});

/** @internal */
export type SetGroupOnCallSchedulesRequest$Outbound = {
  group_id: string;
  OnCallScheduleIDList: components.OnCallScheduleIDList$Outbound;
};

/** @internal */
export const SetGroupOnCallSchedulesRequest$outboundSchema: z.ZodType<
  SetGroupOnCallSchedulesRequest$Outbound,
  z.ZodTypeDef,
  SetGroupOnCallSchedulesRequest
> = z.object({
  groupId: z.string(),
  onCallScheduleIDList: components.OnCallScheduleIDList$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    groupId: "group_id",
    onCallScheduleIDList: "OnCallScheduleIDList",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SetGroupOnCallSchedulesRequest$ {
  /** @deprecated use `SetGroupOnCallSchedulesRequest$inboundSchema` instead. */
  export const inboundSchema = SetGroupOnCallSchedulesRequest$inboundSchema;
  /** @deprecated use `SetGroupOnCallSchedulesRequest$outboundSchema` instead. */
  export const outboundSchema = SetGroupOnCallSchedulesRequest$outboundSchema;
  /** @deprecated use `SetGroupOnCallSchedulesRequest$Outbound` instead. */
  export type Outbound = SetGroupOnCallSchedulesRequest$Outbound;
}

export function setGroupOnCallSchedulesRequestToJSON(
  setGroupOnCallSchedulesRequest: SetGroupOnCallSchedulesRequest,
): string {
  return JSON.stringify(
    SetGroupOnCallSchedulesRequest$outboundSchema.parse(
      setGroupOnCallSchedulesRequest,
    ),
  );
}

export function setGroupOnCallSchedulesRequestFromJSON(
  jsonString: string,
): SafeParseResult<SetGroupOnCallSchedulesRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => SetGroupOnCallSchedulesRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'SetGroupOnCallSchedulesRequest' from JSON`,
  );
}
