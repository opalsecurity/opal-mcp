/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetGroupBindingRequest = {
  /**
   * The ID of the group binding.
   */
  groupBindingId: string;
};

/** @internal */
export const GetGroupBindingRequest$inboundSchema: z.ZodType<
  GetGroupBindingRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  group_binding_id: z.string(),
}).transform((v) => {
  return remap$(v, {
    "group_binding_id": "groupBindingId",
  });
});

/** @internal */
export type GetGroupBindingRequest$Outbound = {
  group_binding_id: string;
};

/** @internal */
export const GetGroupBindingRequest$outboundSchema: z.ZodType<
  GetGroupBindingRequest$Outbound,
  z.ZodTypeDef,
  GetGroupBindingRequest
> = z.object({
  groupBindingId: z.string(),
}).transform((v) => {
  return remap$(v, {
    groupBindingId: "group_binding_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetGroupBindingRequest$ {
  /** @deprecated use `GetGroupBindingRequest$inboundSchema` instead. */
  export const inboundSchema = GetGroupBindingRequest$inboundSchema;
  /** @deprecated use `GetGroupBindingRequest$outboundSchema` instead. */
  export const outboundSchema = GetGroupBindingRequest$outboundSchema;
  /** @deprecated use `GetGroupBindingRequest$Outbound` instead. */
  export type Outbound = GetGroupBindingRequest$Outbound;
}

export function getGroupBindingRequestToJSON(
  getGroupBindingRequest: GetGroupBindingRequest,
): string {
  return JSON.stringify(
    GetGroupBindingRequest$outboundSchema.parse(getGroupBindingRequest),
  );
}

export function getGroupBindingRequestFromJSON(
  jsonString: string,
): SafeParseResult<GetGroupBindingRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetGroupBindingRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetGroupBindingRequest' from JSON`,
  );
}
