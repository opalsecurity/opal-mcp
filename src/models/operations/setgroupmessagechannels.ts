/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type SetGroupMessageChannelsRequest = {
  /**
   * The ID of the group.
   */
  groupId: string;
  messageChannelIDList: components.MessageChannelIDList;
};

/** @internal */
export const SetGroupMessageChannelsRequest$inboundSchema: z.ZodType<
  SetGroupMessageChannelsRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  group_id: z.string(),
  MessageChannelIDList: components.MessageChannelIDList$inboundSchema,
}).transform((v) => {
  return remap$(v, {
    "group_id": "groupId",
    "MessageChannelIDList": "messageChannelIDList",
  });
});

/** @internal */
export type SetGroupMessageChannelsRequest$Outbound = {
  group_id: string;
  MessageChannelIDList: components.MessageChannelIDList$Outbound;
};

/** @internal */
export const SetGroupMessageChannelsRequest$outboundSchema: z.ZodType<
  SetGroupMessageChannelsRequest$Outbound,
  z.ZodTypeDef,
  SetGroupMessageChannelsRequest
> = z.object({
  groupId: z.string(),
  messageChannelIDList: components.MessageChannelIDList$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    groupId: "group_id",
    messageChannelIDList: "MessageChannelIDList",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SetGroupMessageChannelsRequest$ {
  /** @deprecated use `SetGroupMessageChannelsRequest$inboundSchema` instead. */
  export const inboundSchema = SetGroupMessageChannelsRequest$inboundSchema;
  /** @deprecated use `SetGroupMessageChannelsRequest$outboundSchema` instead. */
  export const outboundSchema = SetGroupMessageChannelsRequest$outboundSchema;
  /** @deprecated use `SetGroupMessageChannelsRequest$Outbound` instead. */
  export type Outbound = SetGroupMessageChannelsRequest$Outbound;
}

export function setGroupMessageChannelsRequestToJSON(
  setGroupMessageChannelsRequest: SetGroupMessageChannelsRequest,
): string {
  return JSON.stringify(
    SetGroupMessageChannelsRequest$outboundSchema.parse(
      setGroupMessageChannelsRequest,
    ),
  );
}

export function setGroupMessageChannelsRequestFromJSON(
  jsonString: string,
): SafeParseResult<SetGroupMessageChannelsRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => SetGroupMessageChannelsRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'SetGroupMessageChannelsRequest' from JSON`,
  );
}
