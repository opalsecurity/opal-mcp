/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetBundleResourcesRequest = {
  /**
   * The ID of the bundle.
   */
  bundleId: string;
  /**
   * The maximum number of resources to return from the beginning of the list. Default is 200, max is 1000.
   */
  pageSize?: number | undefined;
  /**
   * A cursor indicating where to start fetching items after a specific point.
   */
  cursor?: string | undefined;
};

/** @internal */
export const GetBundleResourcesRequest$inboundSchema: z.ZodType<
  GetBundleResourcesRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  bundle_id: z.string(),
  page_size: z.number().int().optional(),
  cursor: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    "bundle_id": "bundleId",
    "page_size": "pageSize",
  });
});

/** @internal */
export type GetBundleResourcesRequest$Outbound = {
  bundle_id: string;
  page_size?: number | undefined;
  cursor?: string | undefined;
};

/** @internal */
export const GetBundleResourcesRequest$outboundSchema: z.ZodType<
  GetBundleResourcesRequest$Outbound,
  z.ZodTypeDef,
  GetBundleResourcesRequest
> = z.object({
  bundleId: z.string(),
  pageSize: z.number().int().optional(),
  cursor: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    bundleId: "bundle_id",
    pageSize: "page_size",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetBundleResourcesRequest$ {
  /** @deprecated use `GetBundleResourcesRequest$inboundSchema` instead. */
  export const inboundSchema = GetBundleResourcesRequest$inboundSchema;
  /** @deprecated use `GetBundleResourcesRequest$outboundSchema` instead. */
  export const outboundSchema = GetBundleResourcesRequest$outboundSchema;
  /** @deprecated use `GetBundleResourcesRequest$Outbound` instead. */
  export type Outbound = GetBundleResourcesRequest$Outbound;
}

export function getBundleResourcesRequestToJSON(
  getBundleResourcesRequest: GetBundleResourcesRequest,
): string {
  return JSON.stringify(
    GetBundleResourcesRequest$outboundSchema.parse(getBundleResourcesRequest),
  );
}

export function getBundleResourcesRequestFromJSON(
  jsonString: string,
): SafeParseResult<GetBundleResourcesRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetBundleResourcesRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetBundleResourcesRequest' from JSON`,
  );
}
