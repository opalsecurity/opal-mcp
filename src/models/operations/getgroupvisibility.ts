/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetGroupVisibilityRequest = {
  /**
   * The ID of the group.
   */
  groupId: string;
};

/** @internal */
export const GetGroupVisibilityRequest$inboundSchema: z.ZodType<
  GetGroupVisibilityRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  group_id: z.string(),
}).transform((v) => {
  return remap$(v, {
    "group_id": "groupId",
  });
});

/** @internal */
export type GetGroupVisibilityRequest$Outbound = {
  group_id: string;
};

/** @internal */
export const GetGroupVisibilityRequest$outboundSchema: z.ZodType<
  GetGroupVisibilityRequest$Outbound,
  z.ZodTypeDef,
  GetGroupVisibilityRequest
> = z.object({
  groupId: z.string(),
}).transform((v) => {
  return remap$(v, {
    groupId: "group_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetGroupVisibilityRequest$ {
  /** @deprecated use `GetGroupVisibilityRequest$inboundSchema` instead. */
  export const inboundSchema = GetGroupVisibilityRequest$inboundSchema;
  /** @deprecated use `GetGroupVisibilityRequest$outboundSchema` instead. */
  export const outboundSchema = GetGroupVisibilityRequest$outboundSchema;
  /** @deprecated use `GetGroupVisibilityRequest$Outbound` instead. */
  export type Outbound = GetGroupVisibilityRequest$Outbound;
}

export function getGroupVisibilityRequestToJSON(
  getGroupVisibilityRequest: GetGroupVisibilityRequest,
): string {
  return JSON.stringify(
    GetGroupVisibilityRequest$outboundSchema.parse(getGroupVisibilityRequest),
  );
}

export function getGroupVisibilityRequestFromJSON(
  jsonString: string,
): SafeParseResult<GetGroupVisibilityRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetGroupVisibilityRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetGroupVisibilityRequest' from JSON`,
  );
}
