/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  SyncError,
  SyncError$inboundSchema,
  SyncError$Outbound,
  SyncError$outboundSchema,
} from "./syncerror.js";

export type SyncErrorList = {
  syncErrors: Array<SyncError>;
};

/** @internal */
export const SyncErrorList$inboundSchema: z.ZodType<
  SyncErrorList,
  z.ZodTypeDef,
  unknown
> = z.object({
  sync_errors: z.array(SyncError$inboundSchema),
}).transform((v) => {
  return remap$(v, {
    "sync_errors": "syncErrors",
  });
});

/** @internal */
export type SyncErrorList$Outbound = {
  sync_errors: Array<SyncError$Outbound>;
};

/** @internal */
export const SyncErrorList$outboundSchema: z.ZodType<
  SyncErrorList$Outbound,
  z.ZodTypeDef,
  SyncErrorList
> = z.object({
  syncErrors: z.array(SyncError$outboundSchema),
}).transform((v) => {
  return remap$(v, {
    syncErrors: "sync_errors",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SyncErrorList$ {
  /** @deprecated use `SyncErrorList$inboundSchema` instead. */
  export const inboundSchema = SyncErrorList$inboundSchema;
  /** @deprecated use `SyncErrorList$outboundSchema` instead. */
  export const outboundSchema = SyncErrorList$outboundSchema;
  /** @deprecated use `SyncErrorList$Outbound` instead. */
  export type Outbound = SyncErrorList$Outbound;
}

export function syncErrorListToJSON(syncErrorList: SyncErrorList): string {
  return JSON.stringify(SyncErrorList$outboundSchema.parse(syncErrorList));
}

export function syncErrorListFromJSON(
  jsonString: string,
): SafeParseResult<SyncErrorList, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => SyncErrorList$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'SyncErrorList' from JSON`,
  );
}
