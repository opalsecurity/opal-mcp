/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  UpdateOwnerInfo,
  UpdateOwnerInfo$inboundSchema,
  UpdateOwnerInfo$Outbound,
  UpdateOwnerInfo$outboundSchema,
} from "./updateownerinfo.js";

export type UpdateOwnerInfoList = {
  /**
   * A list of owners with information to update.
   */
  owners: Array<UpdateOwnerInfo>;
};

/** @internal */
export const UpdateOwnerInfoList$inboundSchema: z.ZodType<
  UpdateOwnerInfoList,
  z.ZodTypeDef,
  unknown
> = z.object({
  owners: z.array(UpdateOwnerInfo$inboundSchema),
});

/** @internal */
export type UpdateOwnerInfoList$Outbound = {
  owners: Array<UpdateOwnerInfo$Outbound>;
};

/** @internal */
export const UpdateOwnerInfoList$outboundSchema: z.ZodType<
  UpdateOwnerInfoList$Outbound,
  z.ZodTypeDef,
  UpdateOwnerInfoList
> = z.object({
  owners: z.array(UpdateOwnerInfo$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateOwnerInfoList$ {
  /** @deprecated use `UpdateOwnerInfoList$inboundSchema` instead. */
  export const inboundSchema = UpdateOwnerInfoList$inboundSchema;
  /** @deprecated use `UpdateOwnerInfoList$outboundSchema` instead. */
  export const outboundSchema = UpdateOwnerInfoList$outboundSchema;
  /** @deprecated use `UpdateOwnerInfoList$Outbound` instead. */
  export type Outbound = UpdateOwnerInfoList$Outbound;
}

export function updateOwnerInfoListToJSON(
  updateOwnerInfoList: UpdateOwnerInfoList,
): string {
  return JSON.stringify(
    UpdateOwnerInfoList$outboundSchema.parse(updateOwnerInfoList),
  );
}

export function updateOwnerInfoListFromJSON(
  jsonString: string,
): SafeParseResult<UpdateOwnerInfoList, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UpdateOwnerInfoList$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdateOwnerInfoList' from JSON`,
  );
}
