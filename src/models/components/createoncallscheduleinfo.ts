/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  OnCallScheduleProviderEnum,
  OnCallScheduleProviderEnum$inboundSchema,
  OnCallScheduleProviderEnum$outboundSchema,
} from "./oncallscheduleproviderenum.js";

/**
 * # CreateOnCallScheduleInfo Object
 *
 * @remarks
 * ### Description
 * The `CreateOnCallScheduleInfo` object is used to describe the on call schedule object to be created.
 */
export type CreateOnCallScheduleInfo = {
  /**
   * The third party provider of the on call schedule.
   */
  thirdPartyProvider: OnCallScheduleProviderEnum;
  /**
   * The remote ID of the on call schedule
   */
  remoteId: string;
};

/** @internal */
export const CreateOnCallScheduleInfo$inboundSchema: z.ZodType<
  CreateOnCallScheduleInfo,
  z.ZodTypeDef,
  unknown
> = z.object({
  third_party_provider: OnCallScheduleProviderEnum$inboundSchema,
  remote_id: z.string(),
}).transform((v) => {
  return remap$(v, {
    "third_party_provider": "thirdPartyProvider",
    "remote_id": "remoteId",
  });
});

/** @internal */
export type CreateOnCallScheduleInfo$Outbound = {
  third_party_provider: string;
  remote_id: string;
};

/** @internal */
export const CreateOnCallScheduleInfo$outboundSchema: z.ZodType<
  CreateOnCallScheduleInfo$Outbound,
  z.ZodTypeDef,
  CreateOnCallScheduleInfo
> = z.object({
  thirdPartyProvider: OnCallScheduleProviderEnum$outboundSchema,
  remoteId: z.string(),
}).transform((v) => {
  return remap$(v, {
    thirdPartyProvider: "third_party_provider",
    remoteId: "remote_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateOnCallScheduleInfo$ {
  /** @deprecated use `CreateOnCallScheduleInfo$inboundSchema` instead. */
  export const inboundSchema = CreateOnCallScheduleInfo$inboundSchema;
  /** @deprecated use `CreateOnCallScheduleInfo$outboundSchema` instead. */
  export const outboundSchema = CreateOnCallScheduleInfo$outboundSchema;
  /** @deprecated use `CreateOnCallScheduleInfo$Outbound` instead. */
  export type Outbound = CreateOnCallScheduleInfo$Outbound;
}

export function createOnCallScheduleInfoToJSON(
  createOnCallScheduleInfo: CreateOnCallScheduleInfo,
): string {
  return JSON.stringify(
    CreateOnCallScheduleInfo$outboundSchema.parse(createOnCallScheduleInfo),
  );
}

export function createOnCallScheduleInfoFromJSON(
  jsonString: string,
): SafeParseResult<CreateOnCallScheduleInfo, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreateOnCallScheduleInfo$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateOnCallScheduleInfo' from JSON`,
  );
}
