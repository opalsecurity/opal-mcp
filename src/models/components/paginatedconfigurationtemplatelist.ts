/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  ConfigurationTemplate,
  ConfigurationTemplate$inboundSchema,
  ConfigurationTemplate$Outbound,
  ConfigurationTemplate$outboundSchema,
} from "./configurationtemplate.js";

/**
 * # PaginatedConfigurationTemplateList Object
 *
 * @remarks
 * ### Description
 * The `PaginatedConfigurationTemplateList` object is used to store a list of configuration templates.
 *
 * ### Usage Example
 * Returned from the `GET Configuration Templates` endpoint.
 */
export type PaginatedConfigurationTemplateList = {
  results?: Array<ConfigurationTemplate> | undefined;
};

/** @internal */
export const PaginatedConfigurationTemplateList$inboundSchema: z.ZodType<
  PaginatedConfigurationTemplateList,
  z.ZodTypeDef,
  unknown
> = z.object({
  results: z.array(ConfigurationTemplate$inboundSchema).optional(),
});

/** @internal */
export type PaginatedConfigurationTemplateList$Outbound = {
  results?: Array<ConfigurationTemplate$Outbound> | undefined;
};

/** @internal */
export const PaginatedConfigurationTemplateList$outboundSchema: z.ZodType<
  PaginatedConfigurationTemplateList$Outbound,
  z.ZodTypeDef,
  PaginatedConfigurationTemplateList
> = z.object({
  results: z.array(ConfigurationTemplate$outboundSchema).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PaginatedConfigurationTemplateList$ {
  /** @deprecated use `PaginatedConfigurationTemplateList$inboundSchema` instead. */
  export const inboundSchema = PaginatedConfigurationTemplateList$inboundSchema;
  /** @deprecated use `PaginatedConfigurationTemplateList$outboundSchema` instead. */
  export const outboundSchema =
    PaginatedConfigurationTemplateList$outboundSchema;
  /** @deprecated use `PaginatedConfigurationTemplateList$Outbound` instead. */
  export type Outbound = PaginatedConfigurationTemplateList$Outbound;
}

export function paginatedConfigurationTemplateListToJSON(
  paginatedConfigurationTemplateList: PaginatedConfigurationTemplateList,
): string {
  return JSON.stringify(
    PaginatedConfigurationTemplateList$outboundSchema.parse(
      paginatedConfigurationTemplateList,
    ),
  );
}

export function paginatedConfigurationTemplateListFromJSON(
  jsonString: string,
): SafeParseResult<PaginatedConfigurationTemplateList, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      PaginatedConfigurationTemplateList$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PaginatedConfigurationTemplateList' from JSON`,
  );
}
