/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";

/**
 * Represents the current status of a user as reported by the HR/IDP provider.
 *
 * @remarks
 *
 * ### Status Definitions
 * - `ACTIVE`: User is currently employed and should have appropriate access
 * - `SUSPENDED`: User access temporarily restricted (e.g., leave of absence)
 * - `DEPROVISIONED`: User has been offboarded but record retained
 * - `DELETED`: User record has been removed from HR system
 * - `NOT_FOUND`: User doesn't exist in HR/IDP system
 *
 * ### MCP Status Handling
 * ```typescript
 * function handleUserStatusChange(user: User) {
 *   switch (user.hr_idp_status) {
 *     case 'ACTIVE':
 *       return enableUserAccess(user.user_id);
 *     case 'SUSPENDED':
 *       return suspendUserAccess(user.user_id);
 *     case 'DEPROVISIONED':
 *     case 'DELETED':
 *       return revokeUserAccess(user.user_id);
 *     case 'NOT_FOUND':
 *       return flagUserForReview(user.user_id);
 *   }
 * }
 * ```
 */
export const UserHrIdpStatusEnum = {
  Active: "ACTIVE",
  Suspended: "SUSPENDED",
  Deprovisioned: "DEPROVISIONED",
  Deleted: "DELETED",
  NotFound: "NOT_FOUND",
} as const;
/**
 * Represents the current status of a user as reported by the HR/IDP provider.
 *
 * @remarks
 *
 * ### Status Definitions
 * - `ACTIVE`: User is currently employed and should have appropriate access
 * - `SUSPENDED`: User access temporarily restricted (e.g., leave of absence)
 * - `DEPROVISIONED`: User has been offboarded but record retained
 * - `DELETED`: User record has been removed from HR system
 * - `NOT_FOUND`: User doesn't exist in HR/IDP system
 *
 * ### MCP Status Handling
 * ```typescript
 * function handleUserStatusChange(user: User) {
 *   switch (user.hr_idp_status) {
 *     case 'ACTIVE':
 *       return enableUserAccess(user.user_id);
 *     case 'SUSPENDED':
 *       return suspendUserAccess(user.user_id);
 *     case 'DEPROVISIONED':
 *     case 'DELETED':
 *       return revokeUserAccess(user.user_id);
 *     case 'NOT_FOUND':
 *       return flagUserForReview(user.user_id);
 *   }
 * }
 * ```
 */
export type UserHrIdpStatusEnum = ClosedEnum<typeof UserHrIdpStatusEnum>;

/** @internal */
export const UserHrIdpStatusEnum$inboundSchema: z.ZodNativeEnum<
  typeof UserHrIdpStatusEnum
> = z.nativeEnum(UserHrIdpStatusEnum);

/** @internal */
export const UserHrIdpStatusEnum$outboundSchema: z.ZodNativeEnum<
  typeof UserHrIdpStatusEnum
> = UserHrIdpStatusEnum$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UserHrIdpStatusEnum$ {
  /** @deprecated use `UserHrIdpStatusEnum$inboundSchema` instead. */
  export const inboundSchema = UserHrIdpStatusEnum$inboundSchema;
  /** @deprecated use `UserHrIdpStatusEnum$outboundSchema` instead. */
  export const outboundSchema = UserHrIdpStatusEnum$outboundSchema;
}
