/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";

/**
 * # Request Status
 *
 * @remarks
 * ### Description
 * The `RequestStatus` enum is used to represent the status of a request.
 *
 * ### Usage Example
 * Returned from the `GET Requests` endpoint.
 */
export const RequestStatusEnum = {
  Pending: "PENDING",
  Approved: "APPROVED",
  Denied: "DENIED",
  Canceled: "CANCELED",
} as const;
/**
 * # Request Status
 *
 * @remarks
 * ### Description
 * The `RequestStatus` enum is used to represent the status of a request.
 *
 * ### Usage Example
 * Returned from the `GET Requests` endpoint.
 */
export type RequestStatusEnum = ClosedEnum<typeof RequestStatusEnum>;

/** @internal */
export const RequestStatusEnum$inboundSchema: z.ZodNativeEnum<
  typeof RequestStatusEnum
> = z.nativeEnum(RequestStatusEnum);

/** @internal */
export const RequestStatusEnum$outboundSchema: z.ZodNativeEnum<
  typeof RequestStatusEnum
> = RequestStatusEnum$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RequestStatusEnum$ {
  /** @deprecated use `RequestStatusEnum$inboundSchema` instead. */
  export const inboundSchema = RequestStatusEnum$inboundSchema;
  /** @deprecated use `RequestStatusEnum$outboundSchema` instead. */
  export const outboundSchema = RequestStatusEnum$outboundSchema;
}
