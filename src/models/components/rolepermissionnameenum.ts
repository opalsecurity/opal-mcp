/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";

/**
 * The name of the role permission.
 */
export const RolePermissionNameEnum = {
  Read: "READ",
  ReadAssignments: "READ_ASSIGNMENTS",
  Create: "CREATE",
  Import: "IMPORT",
  Export: "EXPORT",
  Sync: "SYNC",
  Delete: "DELETE",
  ReadSettings: "READ_SETTINGS",
  EditTags: "EDIT_TAGS",
  EditSettings: "EDIT_SETTINGS",
  EditSyncSettings: "EDIT_SYNC_SETTINGS",
  EditAssignments: "EDIT_ASSIGNMENTS",
  EditRequestConfigurations: "EDIT_REQUEST_CONFIGURATIONS",
  EditEventStream: "EDIT_EVENT_STREAM",
  AssignUarReviewers: "ASSIGN_UAR_REVIEWERS",
  SendReminders: "SEND_REMINDERS",
  Stop: "STOP",
  RequestOnBehalf: "REQUEST_ON_BEHALF",
} as const;
/**
 * The name of the role permission.
 */
export type RolePermissionNameEnum = ClosedEnum<typeof RolePermissionNameEnum>;

/** @internal */
export const RolePermissionNameEnum$inboundSchema: z.ZodNativeEnum<
  typeof RolePermissionNameEnum
> = z.nativeEnum(RolePermissionNameEnum);

/** @internal */
export const RolePermissionNameEnum$outboundSchema: z.ZodNativeEnum<
  typeof RolePermissionNameEnum
> = RolePermissionNameEnum$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RolePermissionNameEnum$ {
  /** @deprecated use `RolePermissionNameEnum$inboundSchema` instead. */
  export const inboundSchema = RolePermissionNameEnum$inboundSchema;
  /** @deprecated use `RolePermissionNameEnum$outboundSchema` instead. */
  export const outboundSchema = RolePermissionNameEnum$outboundSchema;
}
