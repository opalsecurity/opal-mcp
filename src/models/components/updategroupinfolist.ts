/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  UpdateGroupInfo,
  UpdateGroupInfo$inboundSchema,
  UpdateGroupInfo$Outbound,
  UpdateGroupInfo$outboundSchema,
} from "./updategroupinfo.js";

export type UpdateGroupInfoList = {
  /**
   * A list of groups with information to update.
   */
  groups: Array<UpdateGroupInfo>;
};

/** @internal */
export const UpdateGroupInfoList$inboundSchema: z.ZodType<
  UpdateGroupInfoList,
  z.ZodTypeDef,
  unknown
> = z.object({
  groups: z.array(UpdateGroupInfo$inboundSchema),
});

/** @internal */
export type UpdateGroupInfoList$Outbound = {
  groups: Array<UpdateGroupInfo$Outbound>;
};

/** @internal */
export const UpdateGroupInfoList$outboundSchema: z.ZodType<
  UpdateGroupInfoList$Outbound,
  z.ZodTypeDef,
  UpdateGroupInfoList
> = z.object({
  groups: z.array(UpdateGroupInfo$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateGroupInfoList$ {
  /** @deprecated use `UpdateGroupInfoList$inboundSchema` instead. */
  export const inboundSchema = UpdateGroupInfoList$inboundSchema;
  /** @deprecated use `UpdateGroupInfoList$outboundSchema` instead. */
  export const outboundSchema = UpdateGroupInfoList$outboundSchema;
  /** @deprecated use `UpdateGroupInfoList$Outbound` instead. */
  export type Outbound = UpdateGroupInfoList$Outbound;
}

export function updateGroupInfoListToJSON(
  updateGroupInfoList: UpdateGroupInfoList,
): string {
  return JSON.stringify(
    UpdateGroupInfoList$outboundSchema.parse(updateGroupInfoList),
  );
}

export function updateGroupInfoListFromJSON(
  jsonString: string,
): SafeParseResult<UpdateGroupInfoList, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UpdateGroupInfoList$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdateGroupInfoList' from JSON`,
  );
}
