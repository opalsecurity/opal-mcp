/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  ResourceWithAccessLevel,
  ResourceWithAccessLevel$inboundSchema,
  ResourceWithAccessLevel$Outbound,
  ResourceWithAccessLevel$outboundSchema,
} from "./resourcewithaccesslevel.js";

export type UpdateGroupResourcesInfo = {
  resources: Array<ResourceWithAccessLevel>;
};

/** @internal */
export const UpdateGroupResourcesInfo$inboundSchema: z.ZodType<
  UpdateGroupResourcesInfo,
  z.ZodTypeDef,
  unknown
> = z.object({
  resources: z.array(ResourceWithAccessLevel$inboundSchema),
});

/** @internal */
export type UpdateGroupResourcesInfo$Outbound = {
  resources: Array<ResourceWithAccessLevel$Outbound>;
};

/** @internal */
export const UpdateGroupResourcesInfo$outboundSchema: z.ZodType<
  UpdateGroupResourcesInfo$Outbound,
  z.ZodTypeDef,
  UpdateGroupResourcesInfo
> = z.object({
  resources: z.array(ResourceWithAccessLevel$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateGroupResourcesInfo$ {
  /** @deprecated use `UpdateGroupResourcesInfo$inboundSchema` instead. */
  export const inboundSchema = UpdateGroupResourcesInfo$inboundSchema;
  /** @deprecated use `UpdateGroupResourcesInfo$outboundSchema` instead. */
  export const outboundSchema = UpdateGroupResourcesInfo$outboundSchema;
  /** @deprecated use `UpdateGroupResourcesInfo$Outbound` instead. */
  export type Outbound = UpdateGroupResourcesInfo$Outbound;
}

export function updateGroupResourcesInfoToJSON(
  updateGroupResourcesInfo: UpdateGroupResourcesInfo,
): string {
  return JSON.stringify(
    UpdateGroupResourcesInfo$outboundSchema.parse(updateGroupResourcesInfo),
  );
}

export function updateGroupResourcesInfoFromJSON(
  jsonString: string,
): SafeParseResult<UpdateGroupResourcesInfo, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UpdateGroupResourcesInfo$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdateGroupResourcesInfo' from JSON`,
  );
}
